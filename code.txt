#include <iostream>
#include <vector>
#include <string>

using namespace std;

void computeLPS(string pattern, vector<int>& lps) {
int len = 0;
int i = 1;
lps[0] = 0;

while (i < pattern.size()) {
if (pattern[i] == pattern[len]) {
len++;
lps[i] = len;
i++;
} else {
if (len != 0) {
len = lps[len-1];
} else {
lps[i] = 0;
i++;
}
}
}
}

void kmpSearch(string pattern, string text) {
vector<int> lps(pattern.size());
computeLPS(pattern, lps);

int i = 0;
int j = 0;

while (i < text.size()) {
if (pattern[j] == text[i]) {
i++;
j++;
}

if (j == pattern.size()) {
cout << i-j<<" " ;
j = lps[j-1];
} else if (i < text.size() && pattern[j] != text[i]) {
if (j != 0) {
j = lps[j-1];
} else {
i++;
}
}
}
}

int main() {
string pattern, text;
cout << "pattern: ";
getline(cin, pattern);
cout << "String: ";
getline(cin, text);

kmpSearch(pattern, text);

returnÂ 0;
}